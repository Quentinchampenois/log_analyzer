#!/usr/bin/env ruby

require "rake"
require "log_analyzer"
require "terminal-table"
require "colorize"
require "optparse"
require 'pry'

options = {}

parser = OptionParser.new do |opts|
  opts.banner = "Usage: log_analyzer [options]\nSample: log_analyzer -f production.log -s name"

  opts.on("-f filename", "--file=filename", "Select log file") do |v|
    options[:file] = v
  end

  opts.on("-s order", "--sort=order", "Select sorting: time/name/count. Default: time") do |v|
    options[:sort] = v
  end

  opts.on("-f filter", "--filter=all", "Select filter: all/partial/view. Default: all") do |v|
    options[:filter] = v
  end

  opts.on("-sp", "--short", "Shrink long paths") do |v|
    options[:short] = v
  end

  opts.on('-csv', '--output=csv', 'Export to .csv') do |v|
    options[:csv] = v
  end

  opts.on('-h', '--help', 'Displays Help') do
    puts opts
    exit
  end
end

# hack, because "log_analyzer production.log --short" not works but "-sp" works
if i = ARGV.index("--short")
  ARGV[i] = "-sp"
end

parser.parse!

options[:file]      = ARGV[0] if ARGV.size == 1 # user first argument as filename
options[:sort]    ||= :time # default order
options[:filter]  ||= :all  # default order
options[:short]   ||= false

LogAnalyzer::Configuration.configure do |config|
  config.filter = options[:filter]
end

# puts "Running with: #{options.inspect}" # debug

if options[:file] && options[:sort]
  analyzer = LogAnalyzer.analyze(filename: options[:file])
  analyzer.run
  analyzer.order(by: options[:sort])
  analyzer.visualize(short: options[:short])
elsif options[:csv]
  analyzer = LogAnalyzer.analyze(filename: "/home/hashimoto/my_project/log_analyzer/spec/files/file.log")
  analyzer.run
  binding.pry
  analyzer.to_csv
else
  parser.parse! %w[--help]
end

